// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/push.proto

package pbpush

import (
	errors "errors"
	kite "git.dhgames.cn/svr_comm/kite"
	server "git.dhgames.cn/svr_comm/kite/server"
	proto "google.golang.org/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

//玩家添加任务
type ReqAddPushTasks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tasks []*PushUserTask `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
}

func (x *ReqAddPushTasks) Reset() {
	*x = ReqAddPushTasks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_push_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAddPushTasks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAddPushTasks) ProtoMessage() {}

func (x *ReqAddPushTasks) ProtoReflect() protoreflect.Message {
	mi := &file_proto_push_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAddPushTasks.ProtoReflect.Descriptor instead.
func (*ReqAddPushTasks) Descriptor() ([]byte, []int) {
	return file_proto_push_proto_rawDescGZIP(), []int{0}
}

func (x *ReqAddPushTasks) GetTasks() []*PushUserTask {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type RspAddPushTasks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	ErrMsg string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *RspAddPushTasks) Reset() {
	*x = RspAddPushTasks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_push_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspAddPushTasks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspAddPushTasks) ProtoMessage() {}

func (x *RspAddPushTasks) ProtoReflect() protoreflect.Message {
	mi := &file_proto_push_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspAddPushTasks.ProtoReflect.Descriptor instead.
func (*RspAddPushTasks) Descriptor() ([]byte, []int) {
	return file_proto_push_proto_rawDescGZIP(), []int{1}
}

func (x *RspAddPushTasks) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RspAddPushTasks) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type ReqDelPushTaskAll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account int32 `protobuf:"varint,1,opt,name=Account,proto3" json:"Account,omitempty"` //账号id
}

func (x *ReqDelPushTaskAll) Reset() {
	*x = ReqDelPushTaskAll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_push_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqDelPushTaskAll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqDelPushTaskAll) ProtoMessage() {}

func (x *ReqDelPushTaskAll) ProtoReflect() protoreflect.Message {
	mi := &file_proto_push_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqDelPushTaskAll.ProtoReflect.Descriptor instead.
func (*ReqDelPushTaskAll) Descriptor() ([]byte, []int) {
	return file_proto_push_proto_rawDescGZIP(), []int{2}
}

func (x *ReqDelPushTaskAll) GetAccount() int32 {
	if x != nil {
		return x.Account
	}
	return 0
}

type RspDelPushTaskAll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	ErrMsg string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *RspDelPushTaskAll) Reset() {
	*x = RspDelPushTaskAll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_push_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspDelPushTaskAll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspDelPushTaskAll) ProtoMessage() {}

func (x *RspDelPushTaskAll) ProtoReflect() protoreflect.Message {
	mi := &file_proto_push_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspDelPushTaskAll.ProtoReflect.Descriptor instead.
func (*RspDelPushTaskAll) Descriptor() ([]byte, []int) {
	return file_proto_push_proto_rawDescGZIP(), []int{3}
}

func (x *RspDelPushTaskAll) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RspDelPushTaskAll) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type ReqDelPushTaskType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account    int32 `protobuf:"varint,1,opt,name=Account,proto3" json:"Account,omitempty"`       //账号id
	HandleType int32 `protobuf:"varint,2,opt,name=handleType,proto3" json:"handleType,omitempty"` //任务类型
}

func (x *ReqDelPushTaskType) Reset() {
	*x = ReqDelPushTaskType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_push_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqDelPushTaskType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqDelPushTaskType) ProtoMessage() {}

func (x *ReqDelPushTaskType) ProtoReflect() protoreflect.Message {
	mi := &file_proto_push_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqDelPushTaskType.ProtoReflect.Descriptor instead.
func (*ReqDelPushTaskType) Descriptor() ([]byte, []int) {
	return file_proto_push_proto_rawDescGZIP(), []int{4}
}

func (x *ReqDelPushTaskType) GetAccount() int32 {
	if x != nil {
		return x.Account
	}
	return 0
}

func (x *ReqDelPushTaskType) GetHandleType() int32 {
	if x != nil {
		return x.HandleType
	}
	return 0
}

type RspDelPushTaskType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int32  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	ErrMsg string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg,omitempty"`
}

func (x *RspDelPushTaskType) Reset() {
	*x = RspDelPushTaskType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_push_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspDelPushTaskType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspDelPushTaskType) ProtoMessage() {}

func (x *RspDelPushTaskType) ProtoReflect() protoreflect.Message {
	mi := &file_proto_push_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspDelPushTaskType.ProtoReflect.Descriptor instead.
func (*RspDelPushTaskType) Descriptor() ([]byte, []int) {
	return file_proto_push_proto_rawDescGZIP(), []int{5}
}

func (x *RspDelPushTaskType) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RspDelPushTaskType) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

//==================== 推送 ====================//
type PushUserTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account     int32  `protobuf:"varint,1,opt,name=Account,proto3" json:"Account,omitempty"`        //账号id
	HandleType  int32  `protobuf:"varint,2,opt,name=handleType,proto3" json:"handleType,omitempty"`  //任务类型
	Channel     string `protobuf:"bytes,3,opt,name=Channel,proto3" json:"Channel,omitempty"`         //操作平台,android,ios,其他
	Bundle      string `protobuf:"bytes,4,opt,name=Bundle,proto3" json:"Bundle,omitempty"`           //包名，游戏项目,aod
	DeviceToken string `protobuf:"bytes,5,opt,name=DeviceToken,proto3" json:"DeviceToken,omitempty"` //设备token
	Language    string `protobuf:"bytes,6,opt,name=Language,proto3" json:"Language,omitempty"`       //语言
	Ip          string `protobuf:"bytes,7,opt,name=Ip,proto3" json:"Ip,omitempty"`                   //ip地址
	SendCd      int64  `protobuf:"varint,8,opt,name=sendCd,proto3" json:"sendCd,omitempty"`          //剩余cd后发送
	SendAt      int64  `protobuf:"varint,9,opt,name=sendAt,proto3" json:"sendAt,omitempty"`          //发送具体时间，定时推送用
}

func (x *PushUserTask) Reset() {
	*x = PushUserTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_push_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushUserTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushUserTask) ProtoMessage() {}

func (x *PushUserTask) ProtoReflect() protoreflect.Message {
	mi := &file_proto_push_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushUserTask.ProtoReflect.Descriptor instead.
func (*PushUserTask) Descriptor() ([]byte, []int) {
	return file_proto_push_proto_rawDescGZIP(), []int{6}
}

func (x *PushUserTask) GetAccount() int32 {
	if x != nil {
		return x.Account
	}
	return 0
}

func (x *PushUserTask) GetHandleType() int32 {
	if x != nil {
		return x.HandleType
	}
	return 0
}

func (x *PushUserTask) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *PushUserTask) GetBundle() string {
	if x != nil {
		return x.Bundle
	}
	return ""
}

func (x *PushUserTask) GetDeviceToken() string {
	if x != nil {
		return x.DeviceToken
	}
	return ""
}

func (x *PushUserTask) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *PushUserTask) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *PushUserTask) GetSendCd() int64 {
	if x != nil {
		return x.SendCd
	}
	return 0
}

func (x *PushUserTask) GetSendAt() int64 {
	if x != nil {
		return x.SendAt
	}
	return 0
}

var File_proto_push_proto protoreflect.FileDescriptor

var file_proto_push_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x75, 0x73, 0x68, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x36, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x41, 0x64, 0x64, 0x50, 0x75, 0x73, 0x68,
	0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x23, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x55, 0x73, 0x65, 0x72, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x22, 0x41, 0x0a, 0x0f, 0x52, 0x73,
	0x70, 0x41, 0x64, 0x64, 0x50, 0x75, 0x73, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x22, 0x2d, 0x0a,
	0x11, 0x52, 0x65, 0x71, 0x44, 0x65, 0x6c, 0x50, 0x75, 0x73, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x41,
	0x6c, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x43, 0x0a, 0x11,
	0x52, 0x73, 0x70, 0x44, 0x65, 0x6c, 0x50, 0x75, 0x73, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x6c,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72,
	0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73,
	0x67, 0x22, 0x4e, 0x0a, 0x12, 0x52, 0x65, 0x71, 0x44, 0x65, 0x6c, 0x50, 0x75, 0x73, 0x68, 0x54,
	0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x44, 0x0a, 0x12, 0x52, 0x73, 0x70, 0x44, 0x65, 0x6c, 0x50, 0x75, 0x73, 0x68, 0x54,
	0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x22, 0xf8, 0x01, 0x0a, 0x0c, 0x50, 0x75, 0x73, 0x68,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x42, 0x75,
	0x6e, 0x64, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x49, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x43, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x43, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65,
	0x6e, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x41, 0x74, 0x32, 0xb2, 0x01, 0x0a, 0x07, 0x50, 0x75, 0x73, 0x68, 0x41, 0x70, 0x69, 0x12, 0x32,
	0x0a, 0x0c, 0x41, 0x64, 0x64, 0x50, 0x75, 0x73, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x10,
	0x2e, 0x52, 0x65, 0x71, 0x41, 0x64, 0x64, 0x50, 0x75, 0x73, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x1a, 0x10, 0x2e, 0x52, 0x73, 0x70, 0x41, 0x64, 0x64, 0x50, 0x75, 0x73, 0x68, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x12, 0x36, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x50, 0x75, 0x73, 0x68, 0x54, 0x61, 0x73,
	0x6b, 0x73, 0x12, 0x12, 0x2e, 0x52, 0x65, 0x71, 0x44, 0x65, 0x6c, 0x50, 0x75, 0x73, 0x68, 0x54,
	0x61, 0x73, 0x6b, 0x41, 0x6c, 0x6c, 0x1a, 0x12, 0x2e, 0x52, 0x73, 0x70, 0x44, 0x65, 0x6c, 0x50,
	0x75, 0x73, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x6c, 0x6c, 0x12, 0x3b, 0x0a, 0x0f, 0x44, 0x65,
	0x6c, 0x50, 0x75, 0x73, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x2e,
	0x52, 0x65, 0x71, 0x44, 0x65, 0x6c, 0x50, 0x75, 0x73, 0x68, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x1a, 0x13, 0x2e, 0x52, 0x73, 0x70, 0x44, 0x65, 0x6c, 0x50, 0x75, 0x73, 0x68, 0x54,
	0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0f, 0x5a, 0x0d, 0x2e, 0x2f, 0x70, 0x62, 0x67,
	0x6f, 0x2f, 0x70, 0x62, 0x70, 0x75, 0x73, 0x68, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_push_proto_rawDescOnce sync.Once
	file_proto_push_proto_rawDescData = file_proto_push_proto_rawDesc
)

func file_proto_push_proto_rawDescGZIP() []byte {
	file_proto_push_proto_rawDescOnce.Do(func() {
		file_proto_push_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_push_proto_rawDescData)
	})
	return file_proto_push_proto_rawDescData
}

var file_proto_push_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_push_proto_goTypes = []interface{}{
	(*ReqAddPushTasks)(nil),    // 0: ReqAddPushTasks
	(*RspAddPushTasks)(nil),    // 1: RspAddPushTasks
	(*ReqDelPushTaskAll)(nil),  // 2: ReqDelPushTaskAll
	(*RspDelPushTaskAll)(nil),  // 3: RspDelPushTaskAll
	(*ReqDelPushTaskType)(nil), // 4: ReqDelPushTaskType
	(*RspDelPushTaskType)(nil), // 5: RspDelPushTaskType
	(*PushUserTask)(nil),       // 6: PushUserTask
}
var file_proto_push_proto_depIdxs = []int32{
	6, // 0: ReqAddPushTasks.tasks:type_name -> PushUserTask
	0, // 1: PushApi.AddPushTasks:input_type -> ReqAddPushTasks
	2, // 2: PushApi.DelPushTasks:input_type -> ReqDelPushTaskAll
	4, // 3: PushApi.DelPushTaskType:input_type -> ReqDelPushTaskType
	1, // 4: PushApi.AddPushTasks:output_type -> RspAddPushTasks
	3, // 5: PushApi.DelPushTasks:output_type -> RspDelPushTaskAll
	5, // 6: PushApi.DelPushTaskType:output_type -> RspDelPushTaskType
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_push_proto_init() }
func file_proto_push_proto_init() {
	if File_proto_push_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_push_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqAddPushTasks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_push_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspAddPushTasks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_push_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqDelPushTaskAll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_push_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspDelPushTaskAll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_push_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqDelPushTaskType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_push_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspDelPushTaskType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_push_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushUserTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_push_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_push_proto_goTypes,
		DependencyIndexes: file_proto_push_proto_depIdxs,
		MessageInfos:      file_proto_push_proto_msgTypes,
	}.Build()
	File_proto_push_proto = out.File
	file_proto_push_proto_rawDesc = nil
	file_proto_push_proto_goTypes = nil
	file_proto_push_proto_depIdxs = nil
}

// PushApiClient is the client API for PushApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/kite#ClientConn.NewStream.
var PushApi = &pushApi{}

type pushApi struct {
}

func (c *pushApi) AddPushTasks(destination kite.Destination, request *ReqAddPushTasks, opts ...kite.Option) (response *RspAddPushTasks, err error) {
	reqPBData, err := proto.Marshal(request)
	if err != nil {
		return nil, errors.New("request marshal err")
	}
	resPBData, err := kite.Invoke(destination, "push", "PushApi", "AddPushTasks", reqPBData, opts...)
	if err != nil {
		return nil, err
	}
	response = new(RspAddPushTasks)
	err = proto.Unmarshal(resPBData, response)
	return
}

func (c *pushApi) DelPushTasks(destination kite.Destination, request *ReqDelPushTaskAll, opts ...kite.Option) (response *RspDelPushTaskAll, err error) {
	reqPBData, err := proto.Marshal(request)
	if err != nil {
		return nil, errors.New("request marshal err")
	}
	resPBData, err := kite.Invoke(destination, "push", "PushApi", "DelPushTasks", reqPBData, opts...)
	if err != nil {
		return nil, err
	}
	response = new(RspDelPushTaskAll)
	err = proto.Unmarshal(resPBData, response)
	return
}

func (c *pushApi) DelPushTaskType(destination kite.Destination, request *ReqDelPushTaskType, opts ...kite.Option) (response *RspDelPushTaskType, err error) {
	reqPBData, err := proto.Marshal(request)
	if err != nil {
		return nil, errors.New("request marshal err")
	}
	resPBData, err := kite.Invoke(destination, "push", "PushApi", "DelPushTaskType", reqPBData, opts...)
	if err != nil {
		return nil, err
	}
	response = new(RspDelPushTaskType)
	err = proto.Unmarshal(resPBData, response)
	return
}

// PushApiServer is the server API for PushApi service.
type PushApiServer interface {
	New() PushApiServer // if return nil then SetMeta is invalid
	SetMeta(meta *kite.Meta)
	AddPushTasks(*ReqAddPushTasks) (*RspAddPushTasks, error)
	DelPushTasks(*ReqDelPushTaskAll) (*RspDelPushTaskAll, error)
	DelPushTaskType(*ReqDelPushTaskType) (*RspDelPushTaskType, error)
}

type PushApiService struct {
	handle PushApiServer
}

func RegPushApiServer(handle PushApiServer) {
	server.ServiceDispatchObject.AddService("push", "PushApi", &PushApiService{handle: handle})
}

func (s *PushApiService) Do(function string, reqPBData []byte, sender *kite.Destination) (resPBData []byte, err error) {
	switch function {
	case "AddPushTasks":
		return s.AddPushTasks(reqPBData, sender)
	case "DelPushTasks":
		return s.DelPushTasks(reqPBData, sender)
	case "DelPushTaskType":
		return s.DelPushTaskType(reqPBData, sender)
	default:
		err = errors.New("function is not found")
	}
	return
}

func (s *PushApiService) AddPushTasks(reqPBData []byte, sender *kite.Destination) (resPBData []byte, err error) {
	handle := s.handle.New()
	if handle == nil {
		handle = s.handle
	} else {
		handle.SetMeta(&kite.Meta{Sender: sender})
	}
	req := new(ReqAddPushTasks)
	proto.Unmarshal(reqPBData, req)
	var res *RspAddPushTasks
	res, err = handle.AddPushTasks(req)
	if err == nil {
		resPBData, err = proto.Marshal(res)
	}
	return
}

func (s *PushApiService) DelPushTasks(reqPBData []byte, sender *kite.Destination) (resPBData []byte, err error) {
	handle := s.handle.New()
	if handle == nil {
		handle = s.handle
	} else {
		handle.SetMeta(&kite.Meta{Sender: sender})
	}
	req := new(ReqDelPushTaskAll)
	proto.Unmarshal(reqPBData, req)
	var res *RspDelPushTaskAll
	res, err = handle.DelPushTasks(req)
	if err == nil {
		resPBData, err = proto.Marshal(res)
	}
	return
}

func (s *PushApiService) DelPushTaskType(reqPBData []byte, sender *kite.Destination) (resPBData []byte, err error) {
	handle := s.handle.New()
	if handle == nil {
		handle = s.handle
	} else {
		handle.SetMeta(&kite.Meta{Sender: sender})
	}
	req := new(ReqDelPushTaskType)
	proto.Unmarshal(reqPBData, req)
	var res *RspDelPushTaskType
	res, err = handle.DelPushTaskType(req)
	if err == nil {
		resPBData, err = proto.Marshal(res)
	}
	return
}
